
.grid .card {
    position: relative;
    border-radius: 8px;
    cursor: pointer;
    margin: .75rem;
    aspect-ratio: 30 /26;  
    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;
}

/*---------------------------------------------------------------
---                C O D I N G   +   P I A N O                --- 
---------------------------------------------------------------*/

.grid:is(.coding, .piano) .lil-img::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 8px;
    background: linear-gradient(to top, black, transparent);
    --color-bottom: rgb(0 0 0 / .7);
    --color-top: transparent;
    background: linear-gradient(to top, 
        var(--color-bottom) 0%, var(--color-bottom) 10%, 
        var(--color-top) 100%);
}

.grid:is(.coding, .piano) * {
    transition: all 200ms ease-in-out;
}

.grid:is(.coding) .card:not(:hover) .lil-img {
    filter: grayscale(60%);
    /* filter: blur(2.5px) */
}


.grid:is(.coding, .piano) .card:hover {
    scale: 1.03;
}


.grid:is(.coding, .piano) a {
    display: contents;
    color: inherit;
}

.grid:is(.coding, .piano) .lil-img {
    width: 100%;
    height: 100%;
}

.grid:is(.coding, .piano) img {
    width: 100%;
    height: 100%;
    border-radius: 8px;
    display: block;
    position: relative;
    object-fit: cover;
}

.grid:is(.coding, .piano) .texts {
    position: absolute;
    bottom: 0;
    --_padding: 1.3rem;
    padding: var(--_padding);
    width: calc(100% - var(--_padding) * 2);
    text-align: center;
}


.grid:is(.coding, .piano) .texts .title {
    font-size: 1.2rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
}

.grid:is(.coding, .piano) .texts .parag{
    font-size: .9rem;
    
}




/*---------------------------------------------------------------
---                C O M M U N I C A T I O N S                --- 
---------------------------------------------------------------*/

.grid.communications .card {
    aspect-ratio: 30 / 26; 
}

.grid.communications .lil-img {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
}

.grid.communications img {
    width: 40%;
    height: auto;
    object-fit: cover;
    display: block;
}

.grid.communications .card {
    background-color: #f8f9fb /* fallback for safari*/;
    background-color: color-mix(in srgb, var(--bg-color) 40%, white);
}

.grid.communications .lil-text-content {
    margin-top: -70px;
    height: 0;
    overflow: hidden;
    transition: height 700ms;
}

.grid.communications .card.expanded .lil-text-content {
    height: 170px;
}

.grid.communications .text-content {
    height: 0;
    overflow: hidden;
    transition: height 700ms;
    transition-delay: 100ms;    
}

.grid.communications .card:not(.expanded) .text-content {
    transition-delay: 0;
}

.grid.communications .card:not(.expanded) .lil-text-content {
    transition-delay: 200ms;
}

.grid.communications .card.expanded .text-content {
    height: 170px;
}

.grid.communications .text-content {
    text-align: center;
}

.grid.communications .title {
    font-size: 1rem;
    font-weight: 600;
    margin-top: 21px;
    margin-bottom: 12px;
}

.grid.communications .body-text {
    font-size: .96rem;
    line-height: 1.4;
}

.grid.communications .text-content {
    padding-inline: 2rem;
}

.grid.communications .chevron {
    position: absolute;
    bottom: 20px;
    left: calc(50% - 15px);
    transform-origin: 50%;
    transform: rotate(180deg);
    transition: transform 700ms;
}

.grid.communications .card.expanded .chevron {
    transform: rotate(0deg);
}

.grid.communications .card {
    --scale-time: 150ms;
    transition: scale var(--scale-time);
}

.grid.communications .card:hover {
    scale: 1.03;
}

.grid.communications .card:hover:not(.expanded) .chevron {
    animation-name: wiggle;
    animation-duration: 400ms;
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    animation-delay: calc(var(--scale-time) * 7);
}

@keyframes wiggle {
    0% {
        rotate: 0deg;
    }
    30% {
        rotate: -10deg;
    }
    60% {
        rotate: 10deg;
    }
    90% {
        rotate: 0deg;
    }
}